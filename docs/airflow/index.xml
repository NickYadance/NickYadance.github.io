<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Airflow on</title><link>https://nickyadance.github.io/docs/airflow/</link><description>Recent content in Airflow on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 12 Sep 2022 18:10:00 +0800</lastBuildDate><atom:link href="https://nickyadance.github.io/docs/airflow/index.xml" rel="self" type="application/rss+xml"/><item><title>Bestpractice</title><link>https://nickyadance.github.io/docs/airflow/bestpractice/</link><pubDate>Tue, 22 Nov 2022 11:06:19 +0800</pubDate><guid>https://nickyadance.github.io/docs/airflow/bestpractice/</guid><description>Take care Database, especially Mysql # Connections IO : Airflow has heavily read ops and mid-level write ops Slow query : Airflow can make LOTS of slow queries even if the database is properly configured Clean history data Disable statsd if you can # statsd query is large, which can bring extra pressure to the db statsd can potentially crush your scheduler (#18010) Patch critical section of scheduler # Patch this (PR) if Airflow version &amp;lt;2.</description></item><item><title>Trigger</title><link>https://nickyadance.github.io/docs/airflow/trigger/</link><pubDate>Sat, 29 Oct 2022 23:09:37 +0800</pubDate><guid>https://nickyadance.github.io/docs/airflow/trigger/</guid><description>Process, Task and Thread # Multitasking Definition Process Definition Context Switch Definition Thread Definition Reference # python-concurrency</description></item><item><title>Delay</title><link>https://nickyadance.github.io/docs/airflow/delay/</link><pubDate>Fri, 30 Sep 2022 10:36:34 +0800</pubDate><guid>https://nickyadance.github.io/docs/airflow/delay/</guid><description/></item><item><title>Dead Lock</title><link>https://nickyadance.github.io/docs/airflow/dead-lock/</link><pubDate>Tue, 27 Sep 2022 14:25:48 +0800</pubDate><guid>https://nickyadance.github.io/docs/airflow/dead-lock/</guid><description/></item><item><title>Poke</title><link>https://nickyadance.github.io/docs/airflow/poke/</link><pubDate>Mon, 26 Sep 2022 17:19:03 +0800</pubDate><guid>https://nickyadance.github.io/docs/airflow/poke/</guid><description/></item><item><title>Google Oauth</title><link>https://nickyadance.github.io/docs/airflow/google_oauth/</link><pubDate>Mon, 12 Sep 2022 18:10:35 +0800</pubDate><guid>https://nickyadance.github.io/docs/airflow/google_oauth/</guid><description>Implement AirflowSecurityManager, and put it under any PYTHONPATH in Airflow.
import logging import os from typing import Any, List, Union, Dict from airflow.www.fab_security.sqla.models import Permission from airflow.www.security import AirflowSecurityManager log = logging.getLogger(__name__) log.setLevel(os.getenv(&amp;quot;AIRFLOW__LOGGING__FAB_LOGGING_LEVEL&amp;quot;, &amp;quot;INFO&amp;quot;)) FAB_ADMIN_ROLE = &amp;quot;Admin&amp;quot; FAB_OP_ROLE = &amp;quot;Op&amp;quot; FAB_VIEWER_ROLE = &amp;quot;Viewer&amp;quot; FAB_PUBLIC_ROLE = &amp;quot;Public&amp;quot; class GoogleAuthorizer(AirflowSecurityManager): def get_role_permissions_from_db(self, role_id: int) -&amp;gt; List[Permission]: pass def get_oauth_user_info( self, provider: str, resp: Any ) -&amp;gt; Dict[str, Union[str, List[str]]]: authorized_hd = 'shopee.com' me = self.</description></item></channel></rss>