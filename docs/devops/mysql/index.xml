<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mysql on</title><link>https://nickyadance.github.io/docs/devops/mysql/</link><description>Recent content in Mysql on</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 08 Sep 2022 17:38:53 +0800</lastBuildDate><atom:link href="https://nickyadance.github.io/docs/devops/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>Backup</title><link>https://nickyadance.github.io/docs/devops/mysql/backup/</link><pubDate>Mon, 31 Oct 2022 16:33:44 +0800</pubDate><guid>https://nickyadance.github.io/docs/devops/mysql/backup/</guid><description>Concepts # Cold Backup Full backup when database server is not running, less frequent.
Hot Backup Full backup when database server is running and serving.
Warn Backup Full backup when database server is running, but locking some tables.
Incremental Backup Partial backup when database server is running, containing only data(updates) since the last backup.
Binlog Binary format logs containing data updates. Non-Idempotent(different from MongoDB).
Slave Backup # Slave server can be used as an efficient and safe way of replicating (not backup) data, but with minimal latency.</description></item><item><title>Lock</title><link>https://nickyadance.github.io/docs/devops/mysql/lock/</link><pubDate>Tue, 11 Oct 2022 18:36:36 +0800</pubDate><guid>https://nickyadance.github.io/docs/devops/mysql/lock/</guid><description>Setup CREATE DATABASE study; USE study; CREATE TABLE student_scores ( id int(11) NOT NULL, name varchar(100) NOT NULL, age tinyint(4) NOT NULL, score int(11) NOT NULL, PRIMARY KEY (id), KEY idx_name (name), KEY idx_age (age) ); INSERT INTO student_scores (id, name, age, score) VALUES (10, 'John', 11, 70), (20, 'Tom', 12, 90), (30, 'Jerry', 15, 95), (40, 'Jack', 13, 80), (50, 'Rose', 14, 85) ; SET GLOBAL innodb_status_output_locks=1; SHOW ENGINE INNODB STATUS; mysql&amp;gt; select LOCK_TYPE, LOCK_MODE, LOCK_STATUS, LOCK_DATA from performance_schema.</description></item><item><title>Isolation</title><link>https://nickyadance.github.io/docs/devops/mysql/isolation/</link><pubDate>Tue, 27 Sep 2022 16:15:41 +0800</pubDate><guid>https://nickyadance.github.io/docs/devops/mysql/isolation/</guid><description>Setup DROP TABLE IF EXISTS IsolationTests; CREATE TABLE IsolationTests ( Col1 INT, Col2 INT, Col3 INT ); INSERT INTO IsolationTests(Col1,Col2,Col3) SELECT 1,2,3 UNION ALL SELECT 1,2,3 UNION ALL SELECT 1,2,3 UNION ALL SELECT 1,2,3 UNION ALL SELECT 1,2,3 UNION ALL SELECT 1,2,3 UNION ALL SELECT 1,2,3 ; Read Uncommitted # -- T1 - T2 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED; BEGIN; BEGIN; UPDATE IsolationTests SET Col1 = 2; -- Dirty Read.</description></item><item><title>Client</title><link>https://nickyadance.github.io/docs/devops/mysql/client/</link><pubDate>Thu, 08 Sep 2022 17:39:35 +0800</pubDate><guid>https://nickyadance.github.io/docs/devops/mysql/client/</guid><description>create user
CREATE USER 'repl'@'%' IDENTIFIED BY '123456'; GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%'; flush privileges; find out the latest deadlocks
show engine innodb status; show transactions
select trx_id, trx_state, trx_mysql_thread_id, trx_query from information_schema.innodb_trx; show processeslist
SHOW FULL PROCESSLIST; kill processes
kill &amp;lt;mysql_thread_id&amp;gt;; get&amp;amp;set variables
show variables like &amp;quot;max_connections&amp;quot;; set global max_connections = 200; count select qps
show global status like &amp;quot;Com_select&amp;quot;; do sleep(10); show global status like &amp;quot;Com_select&amp;quot;;</description></item></channel></rss>