{"pageProps":{"data":{"id":"qsort_test","html":"<span class=\"hljs-keyword\">package</span> main\n\n<span class=\"hljs-keyword\">import</span> (\n\t<span class=\"hljs-string\">&quot;gotest.tools/assert&quot;</span>\n\t<span class=\"hljs-string\">&quot;math/rand&quot;</span>\n\t<span class=\"hljs-string\">&quot;testing&quot;</span>\n)\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(A []<span class=\"hljs-type\">int</span>, i, j <span class=\"hljs-type\">int</span>)</span></span> {\n\ttmp := A[i]\n\tA[i] = A[j]\n\tA[j] = tmp\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">random</span><span class=\"hljs-params\">(l, r <span class=\"hljs-type\">int</span>)</span></span> <span class=\"hljs-type\">int</span> {\n\t<span class=\"hljs-keyword\">return</span> l + rand.Intn(r-l)\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">Partition</span><span class=\"hljs-params\">(A []<span class=\"hljs-type\">int</span>, l, r <span class=\"hljs-type\">int</span>)</span></span> (pivot <span class=\"hljs-type\">int</span>) {\n\ti := l\n\tj := l\n\tx := A[r<span class=\"hljs-number\">-1</span>]\n\t<span class=\"hljs-keyword\">for</span> j &lt; r {\n\t\t<span class=\"hljs-keyword\">if</span> A[j] &lt;= x {\n\t\t\tswap(A, i, j)\n\t\t\ti = i + <span class=\"hljs-number\">1</span>\n\t\t}\n\t\tj = j + <span class=\"hljs-number\">1</span>\n\t}\n\t<span class=\"hljs-keyword\">return</span> i - <span class=\"hljs-number\">1</span>\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">QSort</span><span class=\"hljs-params\">(A []<span class=\"hljs-type\">int</span>, l, r <span class=\"hljs-type\">int</span>)</span></span> {\n\t<span class=\"hljs-keyword\">if</span> l &lt; r {\n\t\t<span class=\"hljs-comment\">//p := random(l, r)</span>\n\t\t<span class=\"hljs-comment\">//swap(A, p, r-1)</span>\n\t\tpivot := Partition(A, l, r)\n\t\tQSort(A, l, pivot)\n\t\tQSort(A, pivot+<span class=\"hljs-number\">1</span>, r)\n\t}\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">KthElement</span><span class=\"hljs-params\">(A []<span class=\"hljs-type\">int</span>, l, r, k <span class=\"hljs-type\">int</span>)</span></span> <span class=\"hljs-type\">int</span> {\n\t<span class=\"hljs-keyword\">if</span> l &lt; r {\n\t\tpivot := Partition(A, l, r)\n\t\tki := k - <span class=\"hljs-number\">1</span>\n\t\t<span class=\"hljs-keyword\">if</span> ki == pivot {\n\t\t\t<span class=\"hljs-keyword\">return</span> A[pivot]\n\t\t} <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> ki &lt; pivot {\n\t\t\t<span class=\"hljs-keyword\">return</span> KthElement(A, l, pivot, k)\n\t\t} <span class=\"hljs-keyword\">else</span> {\n\t\t\t<span class=\"hljs-keyword\">return</span> KthElement(A, pivot+<span class=\"hljs-number\">1</span>, r, k)\n\t\t}\n\t}\n\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">-1</span>\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">TestQSort</span><span class=\"hljs-params\">(t *testing.T)</span></span> {\n\tA := []<span class=\"hljs-type\">int</span>{<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>}\n\tQSort(A, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(A))\n\tassert.DeepEqual(t, A, []<span class=\"hljs-type\">int</span>{<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">10</span>})\n\tB := []<span class=\"hljs-type\">int</span>{<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>}\n\tQSort(B, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(B))\n\tassert.DeepEqual(t, B, []<span class=\"hljs-type\">int</span>{<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>})\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">TestKthElement</span><span class=\"hljs-params\">(t *testing.T)</span></span> {\n\tA := []<span class=\"hljs-type\">int</span>{<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>}\n\tassert.Equal(t, KthElement(A, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(A), <span class=\"hljs-number\">1</span>), <span class=\"hljs-number\">0</span>)\n\tassert.Equal(t, KthElement(A, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(A), <span class=\"hljs-number\">2</span>), <span class=\"hljs-number\">0</span>)\n\tassert.Equal(t, KthElement(A, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(A), <span class=\"hljs-number\">3</span>), <span class=\"hljs-number\">1</span>)\n\tassert.Equal(t, KthElement(A, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(A), <span class=\"hljs-number\">4</span>), <span class=\"hljs-number\">2</span>)\n\tassert.Equal(t, KthElement(A, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(A), <span class=\"hljs-number\">5</span>), <span class=\"hljs-number\">9</span>)\n\tassert.Equal(t, KthElement(A, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(A), <span class=\"hljs-number\">6</span>), <span class=\"hljs-number\">9</span>)\n\tassert.Equal(t, KthElement(A, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">len</span>(A), <span class=\"hljs-number\">7</span>), <span class=\"hljs-number\">10</span>)\n}\n"}},"__N_SSG":true}