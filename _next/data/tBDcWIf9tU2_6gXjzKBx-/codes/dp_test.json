{"pageProps":{"data":{"id":"dp_test","html":"<span class=\"hljs-keyword\">package</span> main\n\n<span class=\"hljs-keyword\">import</span> (\n\t<span class=\"hljs-string\">&quot;fmt&quot;</span>\n\t<span class=\"hljs-string\">&quot;gotest.tools/assert&quot;</span>\n\t<span class=\"hljs-string\">&quot;testing&quot;</span>\n)\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(a, b <span class=\"hljs-type\">int</span>)</span></span> <span class=\"hljs-type\">int</span> {\n\t<span class=\"hljs-keyword\">if</span> a &gt;= b {\n\t\t<span class=\"hljs-keyword\">return</span> a\n\t} <span class=\"hljs-keyword\">else</span> {\n\t\t<span class=\"hljs-keyword\">return</span> b\n\t}\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">Path</span><span class=\"hljs-params\">(price, cuttingPoint []<span class=\"hljs-type\">int</span>, length <span class=\"hljs-type\">int</span>)</span></span> <span class=\"hljs-type\">string</span> {\n\t<span class=\"hljs-keyword\">if</span> length &gt; <span class=\"hljs-number\">0</span> {\n\t\t<span class=\"hljs-keyword\">return</span> fmt.Sprintf(<span class=\"hljs-string\">&quot;%s+%d[%d]&quot;</span>, Path(price, cuttingPoint, length-cuttingPoint[length]), cuttingPoint[length], price[cuttingPoint[length]])\n\t}\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;&quot;</span>\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">CuttingProblem</span><span class=\"hljs-params\">(price []<span class=\"hljs-type\">int</span>, length <span class=\"hljs-type\">int</span>)</span></span> <span class=\"hljs-type\">int</span> {\n\tdp := <span class=\"hljs-built_in\">make</span>([]<span class=\"hljs-type\">int</span>, length+<span class=\"hljs-number\">1</span>)\n\tcuttingPoint := <span class=\"hljs-built_in\">make</span>([]<span class=\"hljs-type\">int</span>, length+<span class=\"hljs-number\">1</span>)\n\t<span class=\"hljs-keyword\">for</span> i := <span class=\"hljs-number\">1</span>; i &lt;= length; i++ {\n\t\t<span class=\"hljs-keyword\">for</span> j := <span class=\"hljs-number\">1</span>; j &lt;= i; j++ {\n\t\t\t<span class=\"hljs-keyword\">if</span> price[j]+dp[i-j] &gt; dp[i] {\n\t\t\t\tdp[i] = price[j] + dp[i-j]\n\t\t\t\tcuttingPoint[i] = j\n\t\t\t}\n\t\t}\n\t}\n\n\tfmt.Println(Path(price, cuttingPoint, length))\n\n\t<span class=\"hljs-keyword\">return</span> dp[length]\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">TestDp</span><span class=\"hljs-params\">(t *testing.T)</span></span> {\n\tprice := []<span class=\"hljs-type\">int</span>{<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">17</span>, <span class=\"hljs-number\">17</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">24</span>, <span class=\"hljs-number\">30</span>}\n\tassert.Equal(t, CuttingProblem(price, <span class=\"hljs-number\">1</span>), <span class=\"hljs-number\">1</span>)\n\tassert.Equal(t, CuttingProblem(price, <span class=\"hljs-number\">2</span>), <span class=\"hljs-number\">5</span>)\n\tassert.Equal(t, CuttingProblem(price, <span class=\"hljs-number\">3</span>), <span class=\"hljs-number\">8</span>)\n\tassert.Equal(t, CuttingProblem(price, <span class=\"hljs-number\">4</span>), <span class=\"hljs-number\">10</span>)\n\tassert.Equal(t, CuttingProblem(price, <span class=\"hljs-number\">5</span>), <span class=\"hljs-number\">13</span>)\n\tassert.Equal(t, CuttingProblem(price, <span class=\"hljs-number\">6</span>), <span class=\"hljs-number\">17</span>)\n\tassert.Equal(t, CuttingProblem(price, <span class=\"hljs-number\">7</span>), <span class=\"hljs-number\">18</span>)\n\tassert.Equal(t, CuttingProblem(price, <span class=\"hljs-number\">8</span>), <span class=\"hljs-number\">22</span>)\n\tassert.Equal(t, CuttingProblem(price, <span class=\"hljs-number\">9</span>), <span class=\"hljs-number\">25</span>)\n\tassert.Equal(t, CuttingProblem(price, <span class=\"hljs-number\">10</span>), <span class=\"hljs-number\">30</span>)\n}\n"}},"__N_SSG":true}